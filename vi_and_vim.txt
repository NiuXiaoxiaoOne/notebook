c’ + g 显示当前所编辑的文件名

vi -R 以只读的方式打开文件

vi -r 若文件非正常结束，可用该选项进行恢复

vim -C 以兼容vi的模式启动

在命令模式下，s' + zz 可快捷保存并退出

:1,5 d 删除1-5行
:%s/harley/Har/g 将所有的harley换成Har
# 若发现键入错误，可按两下esc取消。或者c'+w 删除最近键入的单词，或者c'+u 删除整行

---------------------
- # 上一行的开头
+ 或者 return键 # 下一行的开头
数字0 # 行的开头
$ # 行的末尾
^ # 移到当前行头，非空格处
w 下一个单词词首，W忽略标点符号
e 下一个单词词尾，E
b 上一个单词词首，B
( # 向上移动到上一个句子
) # 下一个句子
{ # 上一个段落
} # 下一个段落
H 光标移到屏幕顶端 M 移动到中间 L 移动到当前屏幕的最后一行

c + 以上命令，形成组合命令，进入编辑模式，并从当前光标删除到指定命令处。比如c5w，就是指删除两个单词。
d + 以上命令，但不进入编辑模式
y + ..., 指定复制

---------------------

当有很多文字时，就会形成很长的段落。
c' + f 下一屏 
c' + b 上一屏 
c' + u 上半屏
c' + d 下半屏
`` 回到前一个位置
m + 某字母 # 为某行指定位置创建一个不可见的标记
` + 某字母 # 跳转到该位置

[搜索与正则]
/tou # 搜索tou, n 跳到下一个tou, N 跳到上一个tou
/ + 回车 # 默认上一个搜索命令
:set number/nonumber 显示/关闭行号
某行 + G: 跳到指定行
gg 跳到第一行
:$ 跳到文件末尾
G  跳到文件末尾

[插入文本]
上一行(O大写字母)
(I)行头(i)当前光标处(a)行尾(A)
下一行(o小写字母)

替换文本
r + 某字母 # 在命令模式下，将某字母替换掉当前光标所在位置的字母

R 进入编辑模式，接下来的按键会依次替换掉所在位置的字符
s 进入编辑模式，删除光标所在位置的字符，在当前位置进行输入
C 进入编辑模式，删除光标所在以及之后本行的所有字母
S 进入编辑模式，删除整行。cc也可以实现

[vi命令之ex相关的命令：都以:开头]

:s/tou//g # 删除所有tou
:s/tou/ttt/g # 将所有tou转为ttt
扩展：
:57s/tou/ttt/ 将第57行的tou替换成ttt
:25,40s/tou/ttt/
:.,$s/...
:1,$s/...
:%s/...
(. 代表当前行 $ 代表最后一行 % 代表所有行)

[删除文本]
x 删除当前光标所在处字符
D 删除从当前光标到行末尾
X 删除光标左边字符
:4,10d 删除4-10行

[撤销命令]
u 撤销
U 对某行进行大量删改，可用U回退到初始状态
. 重复上一命令对编辑缓冲区的修改，相当于一个宏。eg:重复插入某段字母

[恢复删除: vi共有9个被删除文本的缓存区]
若删除了一行，p功能是在当前行下插入，P(大写)是当前行上插入
若只是删除了一个单词，p功能是在当前光标后插入，P是在光标前
"1p 恢复第一个删除文本缓存区
"1pu.u.u # 可通过此方式来查看各个缓存区的内容

[number]yy 复制1到多行
[number]~ 将1到多个字符大小写调换
:set all 显示所有的选项

[分隔行与连接行]
移到某单词后的空格处：r + 空格 (待考证)
number + J(大写) 1到多次把下一行与本行连接

:5,8co10 将5-8行复制到第10行下
:6,7m7 将6，7行移动到第7行下

[执行shell命令]
:![command] 执行某命令
:!! 执行上一条命令
:sh 启动一个默认shell,exit返回
:!bash 启动一个bash,指定shell,exit返回

[:r用法]

:某行r file1 # 将file1中的所有内容插入到某行中
:r file1 # 插入到当前行
:某行r !ls # 将shell命令ls所返回的结果插入都某行

[将数据写入文件]
:w 写入原文件
:w file1 # 写入到另一个文件
:w! file1 # 覆盖到file1中
:w>>file1 # 追加到file1中
:10,20w>>file1 # 将指定行追加到指定文件中
:e file1 # 切换到另一个文件中

vi搜索使用的正则表达式元字符 p529
重要的vi选项开关 p548
vim推荐学习顺序 p566
